# -*- coding: utf-8 -*-
"""Galaxy profit trading.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NkxBe-6ydpUNm6X2mvCQPfcZBOSJBrk2


"""

import math
print('Galxay Starbase > MEGA trading profit calculator | Made by Aerospace911#9828 with the help of TopThreePlayz#9422 and Fashoomp#9015')
print('------------------------------------------------------------------')
print('Get the prices from the Economy menu')
print('Choose the base that you are going to buy from then sell to mega')
print('------------------------------------------------------------------')
b = 0

#lst=[]
lis1 = []
lis2 = []
##lis = []
##d = input('Is mega in debt or are you in a war? Y/N: ')
##if d == 'y' or 'Y':
  ##print("You probably shouldn't be trading")
##else:
  ##print('Galxay Starbase>MEGA trading profit calculator | Made by Aerospace911#9828')


##Input here to buy from starbase
sil_b = float(input('What is the price of SILICATE to BUY at STARBASE: '))
car_b = float(input('What is the price of CARBON to BUY at STARBASE: '))
ird_b = float(input('What is the price of IRIDIUM to BUY at STARBASE: '))
ada_b = float(input('What is the price of Adamantite to BUY at STARBASE: '))
pal_b = float(input('What is the price of Palladium to BUY at STARBASE: '))
tit_b = float(input('What is the price of Titanium to BUY at STARBASE: '))
qua_b = float(input('What is the price of Quantium to BUY at STARBASE: '))
ura_b = float(input('What is the price of Uranium to BUY at STARBASE: '))

print('------------------------------------------------------------------')

##Input here to buy from mega
sil_m = float(input('What is the price of SILICATE to BUY at MEGABASE: '))
car_m = float(input('What is the price of CARBON to BUY at MEGABASE: '))
ird_m = float(input('What is the price of IRIDIUM to BUY at MEGABASE: '))
ada_m = float(input('What is the price of Adamantite to BUY at STARBASE: '))
pal_m = float(input('What is the price of Palladium to BUY at STARBASE: '))
tit_m = float(input('What is the price of Titanium to BUY at STARBASE: '))
qua_m = float(input('What is the price of Quantium to BUY at STARBASE: '))
ura_m = float(input('What is the price of Uranium to BUY at STARBASE: '))


##Convert mega buy to sell
##Silicate
sil_ms1 =  0.075 * sil_m
sil_ms2 = sil_m - sil_ms1
sil_ms = round(sil_ms2, 1)

##Carbon
car_ms1 =  0.075 * car_m
car_ms2 = car_m - car_ms1
car_ms = round(car_ms2, 1)

##Iridium
ird_ms1 =  0.075 * ird_m
ird_ms2 = ird_m - ird_ms1
ird_ms = round(ird_ms2, 1)

##Adamantite
ada_ms1 =  0.075 * ada_m
ada_ms2 = ada_m - ada_ms1
ada_ms = round(ada_ms2, 1)

##Palladium
pal_ms1 =  0.075 * pal_m
pal_ms2 = pal_m - pal_ms1
pal_ms = round(pal_ms2, 1)

##Titanium
tit_ms1 =  0.075 * tit_m
tit_ms2 = tit_m - tit_ms1
tit_ms = round(tit_ms2, 1)
#Quantium
qua_ms1 =  0.075 * qua_m
qua_ms2 = qua_m - qua_ms1
qua_ms = round(qua_ms2, 1)

##Uranium
ura_ms1 =  0.075 * ura_m
ura_ms2 = ura_m - ura_ms1
ura_ms = round(ura_ms2, 1)



print(' ')
print('------------------------------------------------------------------')
print('Profit Check (If you buy from Starbase and sell to Megabase)')
print('------------------------------------------------------------------')

##Profit Check
##Silicate
sil_p = round(sil_ms - sil_b, 1)

if sil_p > 0.00:
    if sil_p > 1.00:
        print('Silicate',sil_p,'(PROFITABLE +1)-----')
        lis1.extend([sil_p, 'Silicate'])
    else:
        print('Silicate',sil_p,'Profitable +0')
        lis1.extend([sil_p, 'Silicate'])

else:
    print('Silicate',sil_p,'NOT PROFITABLE')
    lis2.extend([sil_p, 'Silicate'])

##Carbon
car_p = round(car_ms - car_b, 1)

if car_p > 0.00:
    if car_p > 1.00:
        print('Carbon',car_p,'(PROFITABLE +1)-----')
        lis1.extend([car_p, 'Carbon'])
    else:
        print('Carbon',car_p,'Profitable +0')
        lis1.extend([car_p, 'Carbon'])
else:
    print('Carbon',car_p,'NOT PROFITABLE')
    lis2.extend([car_p, 'Carbon'])

##Iridium
ird_p = round(ird_ms - ird_b, 1)

if ird_p > 0.00:
    if ird_p > 1.00:
        print('Iridium',ird_p,'(PROFITABLE +1)-----')
        lis1.extend([ird_p, 'Iridium'])
    else:
        print('Iridium',ird_p,'Profitable +0')
        lis1.extend([ird_p, 'Iridium'])
else:
    print('Iridium',ird_p,'NOT PROFITABLE')
    lis2.extend([ird_p, 'Iridium'])

##Adamantite
ada_p = round(ada_ms - ada_b, 1)

if ada_p > 0.00:
    if ada_p > 1.00:
        print('Adamantite',ada_p,'(PROFITABLE +1)-----')
        lis1.extend([ada_p, 'Adamantite'])
    else:
        print('Adamantite',ada_p,'Profitable +0')
        lis1.extend([ada_p, 'Adamantite'])
else:
    print('Adamantite',ada_p,'NOT PROFITABLE')
    lis2.extend([ada_p, 'Adamantite'])

##Palladium
pal_p = round(pal_ms - pal_b, 1)

if pal_p > 0.00:
    if pal_p > 1.00:
        print('Palladium',pal_p,'(PROFITABLE +1)-----')
        lis1.extend([pal_p, 'Palladium'])
    else:
        print('Palladium',pal_p,'Profitable +0')
        lis1.extend([pal_p, 'Palladium'])

else:
    print('Palladium',pal_p,'NOT PROFITABLE')
    lis2.extend([pal_p, 'Palladium'])

##Titanium
tit_p = round(tit_ms - tit_b, 1)

if tit_p > 0.00:
    if tit_p > 1.00:
        print('Titanium',tit_p,'(PROFITABLE +1)-----')
        lis1.extend([tit_p, 'Titanium'])
    else:
        print('Titanium',tit_p,'Profitable +0')
        lis1.extend([tit_p, 'Titanium'])

else:
    print('Titanium1',tit_p,'NOT PROFITABLE')
    lis2.extend([tit_p, 'Titanium'])

#Quantium
qua_p = round(qua_ms - qua_b, 1)

if qua_p > 0.00:
    if qua_p > 1.00:
        print('Quantium',qua_p,'(PROFITABLE +1)-----')
        lis1.extend([qua_p, 'Quantium'])
    else:
        print('Quantium',qua_p,'Profitable +0')
        lis1.extend([qua_p, 'Quantium'])

else:
    print('Quantium',qua_p,'NOT PROFITABLE')
    lis2.extend([qua_p, 'Quantium'])

##Uranium
ura_p = round(ura_ms - ura_b, 1)

if ura_p > 0.00:
    if ura_p > 1.00:
        print('Uranium',ura_p,'(PROFITABLE +1)-----')
        lis1.extend([ura_p, 'Uranium'])
    else:
        print('Uranium',ura_p,'Profitable +0')
        lis1.extend([ura_p, 'Uranium'])
else:
    print('Uranium',ura_p,'NOT PROFITABLE')
    lis2.extend([ura_p, 'Uranium'])





print(' ')
print('------------------------------------------------------------------')
print('Buy from Starbase and sell to Megabase')
print('------------------------------------------------------------------')
print('Profit | Ore Name')

fixed = sorted([(i, j) for i, j in zip(lis1[::2], lis1[1::2])], reverse=True)
for value, mineral in fixed:
    print (value, mineral)

if len(lis1) == 0:
  print('N/A   N/A')
else:
  b = b + 1
  9

print(' ')
print('------------------------------------------------------------------')
print('Buy from Megabase and sell to Starbase')
print('------------------------------------------------------------------')
print('Profit | Ore Name')



fixed = sorted([(i, j) for i, j in zip(lis2[::2], lis2[1::2])], reverse=False)
for value, mineral in fixed:
    print (abs(value), mineral)

if len(lis2) == 0:
  print('N/A   N/A')
else:
  b = b + 1

data=((0.0,'Silicate'), (-1.5,'Carbon'), (-0.6,'Iridium'))
lst=[]
for x in data:
    lst.append(x[0])
lst.sort(reverse=True)
for y in lst:
    for x in data:
        if y==x[0]:
            print(x)
